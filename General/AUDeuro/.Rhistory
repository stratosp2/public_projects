## DAta from : https://www.rba.gov.au/statistics/historical-data.html
data <- read.csv('AUD_historical.csv')
data$Date <- as.Date(data$Date, format = "%Y-%m-%d")
data <- data %>% as_tsibble(index = Date, key = NULL)
#update_tsibble(index = day, regular=TRUE )
loss =28000*(data$EUR) - (28000*0.714)
data %>% autoplot(loss)
data %>% autoplot(EUR)
data <- data %>% mutate(day=row_number())%>%
update_tsibble(index = day, regular=TRUE )
tail(data)
std <- sd(data$EUR)
daily_return <- diff(data$EUR)
data <- data[-1,]
data <- data%>%mutate(daily_return = daily_return, vol = data$EUR-std, vol_sq = vol^2)
#hist(data$vol)
#hist(data$daily_return)
tail(data)
p1 <- data%>%autoplot(EUR)
p2 <- data%>%autoplot(vol)
p3 <- data%>%autoplot(vol_sq)
p1/p2/p3
y_data <- getSymbols("AUDEUR=X", auto.assign = F)
y_data <- Ad(y_data)%>%na.omit()
y_data$Return <- dailyReturn(y_data$`AUDEUR=X.Adjusted`)
colnames(y_data) <-c("Ad_Close", "Return")
tail(y_data)
class(y_data$Return)
charts.PerformanceSummary(y_data$Return)
xts_data <- y_data#%>%select(c("daily_return"))
#sub_data <- sub_data[,-2]
#xts_data <-xts(x = sub_data, order.by = dates)
xts_data <- na.omit(xts_data)
tail(xts_data)
charts.PerformanceSummary(xts_data$Return)
n_bins = 800
hist(xts_data$Return,breaks = n_bins)
mu <- mean(xts_data$Return)
sigma <-sd(xts_data$Return)
mu
sigma
target <- 0.01
z <- (target - mu)/sigma
z
pnorm(q=z, lower.tail = F)
data %>% gg_tsdisplay(difference(log(EUR)), plot_type = 'partial')
last_day <- length(data$day)
last_day
train_data <- data %>% filter(day <= last_day)
fit_1 <- train_data %>%
model(#ANN = ETS(EUR ~ trend('A') ),
ar = ARIMA(EUR, stepwise = FALSE, approx = FALSE),
#search=ARIMA(EUR, stepwise = FALSE, approx = FALSE),
)
report(fit_1)
fit_1 %>% select(ar)%>%gg_tsresiduals()
augment(fit_1) %>%
filter(.model == "ar") %>%
features(.innov, ljung_box, lag=60, dof = 0)
#fit_1%>%select(ar)%>%report(fit_1)
#components(fit_1)%>%autoplot()
#ar_fit %>% select(ar) %>% gg_tsresiduals()
#fit_1 %>% select(ran) %>%gg_tsresiduals()
#fit_1%>% forecast(h=50)%>%autoplot()
#ar_fit%>% forecast(h=50)%>%autoplot()
horizon = 5
recent_data <- data %>% filter(day > 3400)
pred_1 <- fit_1 %>% forecast(h=horizon, times = 100, bootstrap = TRUE)
pred_1 %>% autoplot(recent_data)
print(pred_1)
tail(recent_data)
#report(ar_fit)
sim <- fit_1%>% select(ar) %>% generate(h = 15, times = 50, bootstrap = TRUE)
recent_data %>%
ggplot(aes(x = day)) +
geom_line(aes(y = EUR)) +
geom_line(aes(y = .sim, colour = as.factor(.rep)),
data = sim) +
labs(title="AUD Exchange rate", y="Euro" ) +
guides(colour = "none")
library("fpp3")
library("patchwork")
library("quantmod")
library("PerformanceAnalytics")
## DAta from : https://www.rba.gov.au/statistics/historical-data.html
data <- read.csv('AUD_historical.csv')
data$Date <- as.Date(data$Date, format = "%Y-%m-%d")
data <- data %>% as_tsibble(index = Date, key = NULL)
#update_tsibble(index = day, regular=TRUE )
loss =28000*(data$EUR) - (28000*0.714)
data %>% autoplot(loss)
data %>% autoplot(EUR)
data <- data %>% mutate(day=row_number())%>%
update_tsibble(index = day, regular=TRUE )
tail(data)
std <- sd(data$EUR)
daily_return <- diff(data$EUR)
data <- data[-1,]
data <- data%>%mutate(daily_return = daily_return, vol = data$EUR-std, vol_sq = vol^2)
#hist(data$vol)
#hist(data$daily_return)
tail(data)
p1 <- data%>%autoplot(EUR)
p2 <- data%>%autoplot(vol)
p3 <- data%>%autoplot(vol_sq)
p1/p2/p3
library("fpp3")
library("patchwork")
library("quantmod")
library("PerformanceAnalytics")
## DAta from : https://www.rba.gov.au/statistics/historical-data.html
data <- read.csv('AUD_historical.csv')
data$Date <- as.Date(data$Date, format = "%Y-%m-%d")
data <- data %>% as_tsibble(index = Date, key = NULL)
#update_tsibble(index = day, regular=TRUE )
loss =28000*(data$EUR) - (28000*0.714)
data %>% autoplot(loss)
data %>% autoplot(EUR)
data <- data %>% mutate(day=row_number())%>%
update_tsibble(index = day, regular=TRUE )
tail(data)
std <- sd(data$EUR)
daily_return <- diff(data$EUR)
data <- data[-1,]
data <- data%>%mutate(daily_return = daily_return, vol = data$EUR-std, vol_sq = vol^2)
#hist(data$vol)
#hist(data$daily_return)
tail(data)
p1 <- data%>%autoplot(EUR)
p2 <- data%>%autoplot(vol)
p3 <- data%>%autoplot(vol_sq)
p1/p2/p3
library("fpp3")
library("patchwork")
library("quantmod")
library("PerformanceAnalytics")
## DAta from : https://www.rba.gov.au/statistics/historical-data.html
data <- read.csv('AUD_historical.csv')
data$Date <- as.Date(data$Date, format = "%Y-%m-%d")
data <- data %>% as_tsibble(index = Date, key = NULL)
#update_tsibble(index = day, regular=TRUE )
loss =28000*(data$EUR) - (28000*0.714)
data %>% autoplot(loss)
data %>% autoplot(EUR)
data <- data %>% mutate(day=row_number())%>%
update_tsibble(index = day, regular=TRUE )
tail(data)
std <- sd(data$EUR)
daily_return <- diff(data$EUR)
data <- data[-1,]
data <- data%>%mutate(daily_return = daily_return, vol = data$EUR-std, vol_sq = vol^2)
#hist(data$vol)
#hist(data$daily_return)
tail(data)
p1 <- data%>%autoplot(EUR)
p2 <- data%>%autoplot(vol)
p3 <- data%>%autoplot(vol_sq)
p1/p2/p3
y_data <- getSymbols("AUDEUR=X", auto.assign = F)
y_data <- Ad(y_data)%>%na.omit()
y_data$Return <- dailyReturn(y_data$`AUDEUR=X.Adjusted`)
colnames(y_data) <-c("Ad_Close", "Return")
tail(y_data)
charts.PerformanceSummary(y_data$Return)
xts_data <- y_data#%>%select(c("daily_return"))
#sub_data <- sub_data[,-2]
#xts_data <-xts(x = sub_data, order.by = dates)
xts_data <- na.omit(xts_data)
tail(xts_data)
charts.PerformanceSummary(xts_data$Return)
n_bins = 800
hist(xts_data$Return,breaks = n_bins)
mu <- mean(xts_data$Return)
sigma <-sd(xts_data$Return)
mu
sigma
target <- 0.01
z <- (target - mu)/sigma
z
pnorm(q=z, lower.tail = F)
data %>% gg_tsdisplay(difference(log(EUR)), plot_type = 'partial')
library("fpp3")
library("patchwork")
library("quantmod")
library("PerformanceAnalytics")
## DAta from : https://www.rba.gov.au/statistics/historical-data.html
data <- read.csv('AUD_historical.csv')
data$Date <- as.Date(data$Date, format = "%Y-%m-%d")
data <- data %>% as_tsibble(index = Date, key = NULL)
#update_tsibble(index = day, regular=TRUE )
loss =28000*(data$EUR) - (28000*0.714)
data %>% autoplot(loss)
data %>% autoplot(EUR)
data <- data %>% mutate(day=row_number())%>%
update_tsibble(index = day, regular=TRUE )
tail(data)
std <- sd(data$EUR)
daily_return <- diff(data$EUR)
data <- data[-1,]
data <- data%>%mutate(daily_return = daily_return, vol = data$EUR-std, vol_sq = vol^2)
#hist(data$vol)
#hist(data$daily_return)
tail(data)
p1 <- data%>%autoplot(EUR)
p2 <- data%>%autoplot(vol)
p3 <- data%>%autoplot(vol_sq)
p1/p2/p3
y_data <- getSymbols("AUDEUR=X", auto.assign = F)
y_data <- Ad(y_data)%>%na.omit()
y_data$Return <- dailyReturn(y_data$`AUDEUR=X.Adjusted`)
colnames(y_data) <-c("Ad_Close", "Return")
tail(y_data)
class(y_data$Return)
charts.PerformanceSummary(y_data$Return)
xts_data <- y_data#%>%select(c("daily_return"))
#sub_data <- sub_data[,-2]
#xts_data <-xts(x = sub_data, order.by = dates)
xts_data <- na.omit(xts_data)
tail(xts_data)
charts.PerformanceSummary(xts_data$Return)
n_bins = 800
hist(xts_data$Return,breaks = n_bins)
mu <- mean(xts_data$Return)
sigma <-sd(xts_data$Return)
mu
sigma
target <- 0.01
z <- (target - mu)/sigma
z
pnorm(q=z, lower.tail = F)
data %>% gg_tsdisplay(difference(log(EUR)), plot_type = 'partial')
data %>% autoplot(EUR)
library("fpp3")
library("patchwork")
library("quantmod")
library("PerformanceAnalytics")
## DAta from : https://www.rba.gov.au/statistics/historical-data.html
data <- read.csv('AUD_historical.csv')
data$Date <- as.Date(data$Date, format = "%Y-%m-%d")
data <- data %>% as_tsibble(index = Date, key = NULL)
data %>% autoplot(EUR)
data <- data %>% mutate(day=row_number())%>%
update_tsibble(index = day, regular=TRUE )
tail(data)
std <- sd(data$EUR)
daily_return <- diff(data$EUR)
data <- data[-1,]
data <- data%>%mutate(daily_return = daily_return, vol = data$EUR-std, vol_sq = vol^2)
#hist(data$vol)
#hist(data$daily_return)
tail(data)
p1 <- data%>%autoplot(EUR)
p2 <- data%>%autoplot(vol)
p3 <- data%>%autoplot(vol_sq)
p1/p2/p3
y_data <- getSymbols("AUDEUR=X", auto.assign = F)
y_data <- Ad(y_data)%>%na.omit()
y_data$Return <- dailyReturn(y_data$`AUDEUR=X.Adjusted`)
colnames(y_data) <-c("Ad_Close", "Return")
tail(y_data)
library("fpp3")
library("patchwork")
library("quantmod")
library("PerformanceAnalytics")
## DAta from : https://www.rba.gov.au/statistics/historical-data.html
data <- read.csv('AUD_historical.csv')
data$Date <- as.Date(data$Date, format = "%Y-%m-%d")
data <- data %>% as_tsibble(index = Date, key = NULL)
data %>% autoplot(EUR)
data <- data %>% mutate(day=row_number())%>%
update_tsibble(index = day, regular=TRUE )
tail(data)
std <- sd(data$EUR)
daily_return <- diff(data$EUR)
data <- data[-1,]
data <- data%>%mutate(daily_return = daily_return, vol = data$EUR-std, vol_sq = vol^2)
#hist(data$vol)
#hist(data$daily_return)
tail(data)
p1 <- data%>%autoplot(EUR)
p2 <- data%>%autoplot(vol)
p3 <- data%>%autoplot(vol_sq)
p1/p2/p3
y_data <- getSymbols("AUDEUR=X", auto.assign = F)
y_data <- Ad(y_data)%>%na.omit()
y_data$Return <- dailyReturn(y_data$`AUDEUR=X.Adjusted`)
colnames(y_data) <-c("Ad_Close", "Return")
tail(y_data)
class(y_data$Return)
charts.PerformanceSummary(y_data$Return)
charts.PerformanceSummary(xts_data$Return)
xts_data <- y_data#%>%select(c("daily_return"))
xts_data <- na.omit(xts_data)
charts.PerformanceSummary(xts_data$Return)
n_bins = 800
hist(xts_data$Return,breaks = n_bins)
mu <- mean(xts_data$Return)
sigma <-sd(xts_data$Return)
mu
sigma
target <- 0.01
z <- (target - mu)/sigma
z
pnorm(q=z, lower.tail = F)
data %>% gg_tsdisplay(difference(log(EUR)), plot_type = 'partial')
last_day <- length(data$day)
last_day
train_data <- data %>% filter(day <= last_day)
fit_1 <- train_data %>%
model(#ANN = ETS(EUR ~ trend('A') ),
ar = ARIMA(EUR, stepwise = FALSE, approx = FALSE),
#search=ARIMA(EUR, stepwise = FALSE, approx = FALSE),
)
report(fit_1)
fit_1 %>% select(ar)%>%gg_tsresiduals()
augment(fit_1) %>%
filter(.model == "ar") %>%
features(.innov, ljung_box, lag=60, dof = 0)
horizon = 5
recent_data <- data %>% filter(day > 3400)
pred_1 <- fit_1 %>% forecast(h=horizon, times = 100, bootstrap = TRUE)
pred_1 %>% autoplot(recent_data)
print(pred_1)
tail(recent_data)
pred_1 %>% autoplot(recent_data) + ggtitle("Forecast for the next", horizon , "hours")
pred_1 %>% autoplot(recent_data) + ggtitle(paste("Forecast for the next", horizon , "hours"))
pred_1 %>% autoplot(recent_data) + ggtitle(paste("Forecast for the next", horizon , "days"))
ggsave(predictions,
plot = last_plot())
ggsave("predictions.pdf",
plot = last_plot())
debugSource("~/GitHub projects/General/AUDeuro/AUD_to_Euro.R", echo=TRUE)
library("fpp3")
library("patchwork")
library("quantmod")
library("PerformanceAnalytics")
## DAta from : https://www.rba.gov.au/statistics/historical-data.html
data <- read.csv('AUD_historical.csv')
data$Date <- as.Date(data$Date, format = "%Y-%m-%d")
data <- data %>% as_tsibble(index = Date, key = NULL)
data %>% autoplot(EUR)
data <- data %>% mutate(day=row_number())%>%
update_tsibble(index = day, regular=TRUE )
tail(data)
std <- sd(data$EUR)
daily_return <- diff(data$EUR)
data <- data[-1,]
data <- data%>%mutate(daily_return = daily_return, vol = data$EUR-std, vol_sq = vol^2)
#hist(data$vol)
#hist(data$daily_return)
tail(data)
p1 <- data%>%autoplot(EUR)
p2 <- data%>%autoplot(vol)
p3 <- data%>%autoplot(vol_sq)
p1/p2/p3
y_data <- getSymbols("AUDEUR=X", auto.assign = F)
y_data <- Ad(y_data)%>%na.omit()
y_data$Return <- dailyReturn(y_data$`AUDEUR=X.Adjusted`)
colnames(y_data) <-c("Ad_Close", "Return")
tail(y_data)
xts_data <- y_data#%>%select(c("daily_return"))
xts_data <- na.omit(xts_data)
tail(xts_data)
charts.PerformanceSummary(xts_data$Return)
n_bins = 800
hist(xts_data$Return,breaks = n_bins)
mu <- mean(xts_data$Return)
sigma <-sd(xts_data$Return)
mu
sigma
target <- 0.01
z <- (target - mu)/sigma
z
pnorm(q=z, lower.tail = F)
data %>% gg_tsdisplay(difference(log(EUR)), plot_type = 'partial')
last_day <- length(data$day)
last_day
train_data <- data %>% filter(day <= last_day)
fit_1 <- train_data %>%
model(#ANN = ETS(EUR ~ trend('A') ),
ar = ARIMA(EUR, stepwise = FALSE, approx = FALSE),
#search=ARIMA(EUR, stepwise = FALSE, approx = FALSE),
)
report(fit_1)
fit_1 %>% select(ar)%>%gg_tsresiduals()
augment(fit_1) %>%
filter(.model == "ar") %>%
features(.innov, ljung_box, lag=60, dof = 0)
horizon = 5
recent_data <- data %>% filter(day > 3400)
pred_1 <- fit_1 %>% forecast(h=horizon, times = 100, bootstrap = TRUE)
pred_1 %>% autoplot(recent_data) + ggtitle(paste("Forecast for the next", horizon , "days"))
print(pred_1)
ggsave("predictions_ARIMA.pdf",
plot = last_plot())
tail(recent_data)
sim <- fit_1%>% select(ar) %>% generate(h = 15, times = 50, bootstrap = TRUE)
recent_data %>%
ggplot(aes(x = day)) +
geom_line(aes(y = EUR)) +
geom_line(aes(y = .sim, colour = as.factor(.rep)),
data = sim) +
labs(title="AUD Exchange rate", y="Euro" ) +
guides(colour = "none")
library("fpp3")
library("patchwork")
library("quantmod")
library("PerformanceAnalytics")
## DAta from : https://www.rba.gov.au/statistics/historical-data.html
data <- read.csv('AUD_historical.csv')
y_data <- getSymbols("AUDEUR=X", auto.assign = F)
y_data <- Ad(y_data)%>%na.omit()
y_data$Return <- dailyReturn(y_data$`AUDEUR=X.Adjusted`)
colnames(y_data) <-c("Ad_Close", "Return")
tail(y_data)
xts_data <- y_data#%>%select(c("daily_return"))
xts_data <- na.omit(xts_data)
tail(xts_data)
charts.PerformanceSummary(xts_data$Return)
n_bins = 800
hist(xts_data$Return,breaks = n_bins)
mu <- mean(xts_data$Return)
sigma <-sd(xts_data$Return)
mu
sigma
target <- 0.01
z <- (target - mu)/sigma
z
pnorm(q=z, lower.tail = F)
data %>% gg_tsdisplay(difference(log(EUR)), plot_type = 'partial')
last_day <- length(data$day)
last_day
train_data <- data %>% filter(day <= last_day)
fit_1 <- train_data %>%
model(#ANN = ETS(EUR ~ trend('A') ),
ar = ARIMA(EUR, stepwise = FALSE, approx = FALSE),
#search=ARIMA(EUR, stepwise = FALSE, approx = FALSE),
)
report(fit_1)
fit_1 %>% select(ar)%>%gg_tsresiduals()
augment(fit_1) %>%
filter(.model == "ar") %>%
features(.innov, ljung_box, lag=60, dof = 0)
horizon = 5
recent_data <- data %>% filter(day > 3400)
pred_1 <- fit_1 %>% forecast(h=horizon, times = 100, bootstrap = TRUE)
pred_1 %>% autoplot(recent_data) + ggtitle(paste("Forecast for the next", horizon , "days"))
print(pred_1)
ggsave("predictions_ARIMA.pdf",
plot = last_plot())
tail(recent_data)
sim <- fit_1%>% select(ar) %>% generate(h = 15, times = 50, bootstrap = TRUE)
recent_data %>%
ggplot(aes(x = day)) +
geom_line(aes(y = EUR)) +
geom_line(aes(y = .sim, colour = as.factor(.rep)),
data = sim) +
labs(title="AUD Exchange rate simulations", y="Euro" ) +
guides(colour = "none")
library("fpp3")
library("patchwork")
library("quantmod")
library("PerformanceAnalytics")
y_data <- getSymbols("AUDEUR=X", auto.assign = F)
y_data <- Ad(y_data)%>%na.omit()
y_data$Return <- dailyReturn(y_data$`AUDEUR=X.Adjusted`)
colnames(y_data) <-c("Ad_Close", "Return")
tail(y_data)
xts_data <- y_data#%>%select(c("daily_return"))
xts_data <- na.omit(xts_data)
tail(xts_data)
charts.PerformanceSummary(xts_data$Return)
n_bins = 800
hist(xts_data$Return,breaks = n_bins)
mu <- mean(xts_data$Return)
sigma <-sd(xts_data$Return)
mu
sigma
target <- 0.01
z <- (target - mu)/sigma
z
pnorm(q=z, lower.tail = F)
data %>% gg_tsdisplay(difference(log(EUR)), plot_type = 'partial')
last_day <- length(data$day)
last_day
train_data <- data %>% filter(day <= last_day)
fit_1 <- train_data %>%
model(#ANN = ETS(EUR ~ trend('A') ),
ar = ARIMA(EUR, stepwise = FALSE, approx = FALSE),
#search=ARIMA(EUR, stepwise = FALSE, approx = FALSE),
)
report(fit_1)
fit_1 %>% select(ar)%>%gg_tsresiduals()
augment(fit_1) %>%
filter(.model == "ar") %>%
features(.innov, ljung_box, lag=60, dof = 0)
horizon = 5
recent_data <- data %>% filter(day > 3400)
pred_1 <- fit_1 %>% forecast(h=horizon, times = 100, bootstrap = TRUE)
pred_1 %>% autoplot(recent_data) + ggtitle(paste("Forecast for the next", horizon , "days"))
print(pred_1)
ggsave("predictions_ARIMA.pdf",
plot = last_plot())
tail(recent_data)
sim <- fit_1%>% select(ar) %>% generate(h = 15, times = 50, bootstrap = TRUE)
recent_data %>%
ggplot(aes(x = day)) +
geom_line(aes(y = EUR)) +
geom_line(aes(y = .sim, colour = as.factor(.rep)),
data = sim) +
labs(title="AUD Exchange rate simulations", y="Euro" ) +
guides(colour = "none")
